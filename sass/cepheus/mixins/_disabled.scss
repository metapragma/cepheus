@mixin cas-button-transition {
  transition-duration: 80ms;
  transition-timing-function: linear;
  transition-property: all;
}

@mixin cas-button-color ($color, $scale) {
  $ratio: $golden;
  $base: 64/9;
  $scale: $scale - 1;

  $ccp: modular-scale($scale, $base, $ratio) * 1% - $base;

  $color: darken($color, $ccp);

  color: $color;

  .cas-button__icon svg {
    fill: $color;
  }
}

@mixin cas-button-background ($background-color, $scale) {
  $ratio: $golden;
  $base: 64/9;
  $scale: $scale - 1;

  $bcp: modular-scale($scale, $base, $ratio) * 1% - $base;

  $background-color: darken($background-color, $bcp);
  $border-color: desaturate(darken($background-color, 4/3%), $bcp);

  background-color: $background-color;
  border-color: $border-color;

  @if $scale == 0 {
    $shadow-color: opacify($border-color, $major-eleventh/10);

    box-shadow: 0 0 1px 0 $shadow-color;
  }

  @else {
    $shadow-color: opacify(darken($border-color, 24/9%), $major-eleventh/10);

    box-shadow: inset 0 -2px 0 $shadow-color;
  }
}

@mixin cas-button-state ($color, $background-color, $state) {
  $border-color: false;
  $shadow-color: false;

  @if type-of($color) != color {
    .cas-button__icon svg {
      fill: currentColor;
    }
  }

  @else {
    @if $state == initial {
      @include cas-button-color($color, 1);
    }

    @if $state == hover {
      @include cas-button-color($color, 2);
    }

    @else if $state == focus {
      @include cas-button-color($color, 3);
    }

    @else if $state == active {
      @include cas-button-color($color, 4);
    }
  }

  @if $background-color == transparent {
    @if $state == focus {
      // TODO: tab focus mixin
      outline: none;
      border-color: inherit;
      border-color: currentColor;
    }
  }

  @else {
    @if $state == initial {
      @include cas-button-background($background-color, 1);

      .cas-button__icon svg {
        fill: darken(desaturate($background-color, 35%), 15%);
      }
    }

    @else if $state == hover {
      @include cas-button-background($background-color, 2);
    }

    @else if $state == focus {
      outline: none;

      @include cas-button-background($background-color, 3);
    }

    @else if $state == active {
      outline: none;

      @include cas-button-background($background-color, 4);
    }

    @include cas-button-transition;
  }
}

@mixin cas-button($color, $background-color) {
  .cas-button__button {
    @include cas-button-state($color, $background-color, initial);

    &:hover,
    &.cas-button--hover {
      @include cas-button-state($color, $background-color, hover);
    }

    &:focus,
    &.cas-button--focus {
      @include cas-button-state($color, $background-color, focus);
    }

    &:active,
    &.cas-button--active {
      @include cas-button-state($color, $background-color, active);
    }

    &.cas-button--disabled,
    &[disabled],
    fieldset[disabled] & {
      outline: none;
      pointer-events: none;
      cursor: not-allowed;
      box-shadow: none;
      opacity: 0.65;
    }
  }
}

@mixin cas-form-asterisk {
  content: '*';
  color: $light-red;
  margin-right: 0.25em;
}

@mixin cas-form-help {
  margin-top: $cas-form-element-helper-margin-top;
  font-size: $cas-form-element-helper-font-size;
  color: $cas-form-element-helper-color;
}

@mixin cas-form-label {
  display: block;
  font-size: $cas-form-element-label-font-size;
  margin-bottom: $cas-form-element-label-margin-bottom;
  color: $cas-form-element-label-color;
}

@mixin cas-form-disabled {
  border: 2px solid $moon-gray;
  pointer-events: none;
  color: $moon-gray;
}

@mixin cas-input-generics {
  .cas-input--label {
    @include cas-form-label;
  }

  .cas-input--box {
    display: inline-block;
    width: 100%;
    font-size: 1em;
    padding: $cas-form-element-padding;
    background-color: $cas-form-element-background-color;
    color: $cas-form-element-color;
    border: $cas-form-element-border;
    border-radius: $cas-form-element-border-radius;
    height: $cas-input-height;
    line-height: 1.5;
    transition: all 0.25s 0.1s linear;

    &:hover {
      background-color: $cas-form-element-background-color-hover;
    }

    &:focus {
      outline: none;
      border: $cas-form-element-border-focus;
      background-color: $cas-form-element-background-color-focus;
      transition: border 0.25s 0.1s linear, background-color 0.25s 0.1s linear, box-shadow 0.25s 0.1s linear, border-radius 0.25s 0.1s linear;
      box-shadow: $cas-form-element-box-shadow;
    }
  }

  .cas-input--box:hover + .cas-input--icon {
    background-color: $cas-form-element-background-color-hover;
  }

  .cas-input--box:focus + .cas-input--icon {
    outline: none;
    border: $cas-form-element-border-focus;
    // border-left: none;
    background-color: $cas-form-element-background-color-focus;
    transition: all 0.25s 0.1s linear;
    box-shadow: $cas-form-element-box-shadow;
  }
}

@mixin cas-select-generics {
  .cas-select__label {
    @include cas-form-label;
  }

  .cas-select--box {
    display: block;
    outline: none;
    width: 100%;
    font-size: $cas-form-element-font-size;
    color: $cas-form-element-color;
    border: $cas-form-element-border;
    background-color: $cas-form-element-background-color;
    padding: $cas-form-element-padding;
    border-radius: $cas-form-element-border-radius;
    box-shadow: $cas-form-element-box-shadow;
    cursor: pointer;
    transition: all 0.25s 0.1s linear;

    &:hover {
      border-radius: 0;
      background-color: transparentize($near-white, 0.5);
      transition: all 0.25s 0.1s linear;
    }
  }

  .cas-select--option {
    background-color: $near-white;
  }
}

@mixin cas-textarea-generics {
  .cas-textarea--element {
    position: relative;
    display: block;

    .cas-textarea__label {
      @include cas-form-label;
    }

    .cas-textarea__control {
      display: block;

      .cas-textarea {
        width: 100%;
        display: block;
        padding: $cas-form-element-padding;
        font-size: $cas-form-element-font-size;
        height: $height;
        background-color: $cas-form-element-background-color;
        color: $cas-form-element-color;
        border: $cas-form-element-border;
        border-radius: $cas-form-element-border-radius;
        transition: all 0.25s 0.1s linear;

        &:hover {
          background-color: $cas-form-element-background-color-hover;
        }

        &:focus {
          outline: none;
          border: $cas-form-element-border-focus;
          background-color: $cas-form-element-background-color-focus;
          transition: all 0.25s 0.1s linear;
          box-shadow: $cas-form-element-box-shadow;
        }
      }
    }
  }
}

$cas-form-element-background-color: $white;
$cas-form-element-background-color-hover: $light-gray;
$cas-form-element-background-color-focus: opacify($cas-form-element-background-color-hover, 0.25);
$cas-form-element-background-color-disabled: $light-gray;

$cas-form-element-border: 2px solid $moon-gray;
$cas-form-element-border-focus: 2px solid $gray;
$cas-form-element-error-border: 2px solid $light-red;
$cas-form-element-error-border-focus: 2px solid $red;

$cas-form-element-font-size: 1em;
$cas-form-element-color: $gray;
$cas-form-element-padding: 1em 1.5em 1em 1em;
$cas-form-element-border-radius: 0.5em;

$cas-form-element-box-shadow: 0.1em 0.1em 0.25em $light-gray;

$cas-form-element-label-font-size: 1em;
$cas-form-element-label-margin-bottom: 0.5em;
$cas-form-element-label-color: $gray;

$cas-form-element-helper-font-size: 0.75em;
$cas-form-element-helper-margin-top: 0.5em;
$cas-form-element-helper-color: $gray;

$cas-input-height: $cas-form-element-font-size + 2em;

